
name: TestPerformance

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  RunPerformaceCheck_Unix:
    runs-on: ${{ matrix.os }}
    outputs:
      output_linux_11: ${{ steps.testperf.outputs.Linux_output_11 }}
      output_linux_12: ${{ steps.testperf.outputs.Linux_output_12 }}
      output_linux_13: ${{ steps.testperf.outputs.Linux_output_13 }}
      output_macos_11: ${{ steps.testperf.outputs.Darwin_output_11 }}
      output_macos_12: ${{ steps.testperf.outputs.Darwin_output_12 }}
      output_macos_13: ${{ steps.testperf.outputs.Darwin_output_13 }}

    strategy:
      matrix:
        python-version: ["3.11","3.12","3.13"]
        os: ["ubuntu-latest", "macos-latest"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Test Performance with unittest
      id: testperf
      run: |
        python -m build
        pip install --find-links=./dist cloudcrypt
        x=${{ matrix.python-version }}
        uname -s
        echo "$(uname -s)_output_${x:2:2}"=$(python -m unittest discover -s Test -p performance_test_*.py) >> "$GITHUB_OUTPUT"
  PublishResults:
    runs-on: ubuntu-latest
    needs: [RunPerformaceCheck_Linux]
    steps:
    - uses: actions/checkout@v4
    - name: Write results into files
      run: |
        cp ./Test/testresults_template.csv ./Test/testresults.csv
        results="${{ toJSON(needs.RunPerformaceCheck_Linux.outputs) }}"
        echo $results
        echo $results | grep -Po "(?<=: ).*?((?=, )|(?= }))" >> ./Test/testresults.csv

    - uses: stefanzweifel/git-auto-commit-action@v6
      with:
        commit_message: Added Performance Test results
        file_pattern: '*results.csv'
